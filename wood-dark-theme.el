(deftheme wood-dark
  "Looks like dark wood.")

(custom-theme-set-faces
 'wood-dark
 '(default ((t (:background "#331400" :foreground "#fffbca" :weight light :height 140 :family "JetBrainsMono Nerd Font Mono"))))
 '(ac-completion-face ((((class color) (min-colors 89)) (:underline t :foreground "#9c3e00"))))
 '(ansi-color-black ((t (:background "#161616" :foreground "#161616"))))
 '(ansi-color-bright-black ((t (:background "#959595" :foreground "#959595"))))
 '(ansi-color-red ((t (:background "#c72d23" :foreground "#c72d23"))))
 '(ansi-color-bright-red ((t (:background "#fa4a4a" :foreground "#fa4a4a"))))
 '(ansi-color-green ((t (:background "#83b62b" :foreground "#83b62b"))))
 '(ansi-color-bright-green ((t (:background "#bde271" :foreground "#bde271"))))
 '(ansi-color-yellow ((t (:background "#c9c109" :foreground "#c9c109"))))
 '(ansi-color-bright-yellow ((t (:background "#fff27f" :foreground "#fff27f"))))
 '(ansi-color-blue ((t (:background "#5f4dcd" :foreground "#5f4dcd"))))
 '(ansi-color-bright-blue ((t (:background "#a895fe" :foreground "#a895fe"))))
 '(ansi-color-magenta ((t (:background "#c536c9" :foreground "#c536c9"))))
 '(ansi-color-bright-magenta ((t (:background "#f782f7" :foreground "#f782f7"))))
 '(ansi-color-cyan ((t (:background "#039ec3" :foreground "#039ec3"))))
 '(ansi-color-bright-cyan ((t (:background "#5ed6fe" :foreground "#5ed6fe"))))
 '(ansi-color-white ((t (:background "#c8cccd" :foreground "#c8cccd"))))
 '(ansi-color-bright-white ((t (:background "#feffff" :foreground "#feffff"))))
 '(aw-leading-char-face ((t (:foreground "red" :height 5.0))))
 '(cursor ((((class color) (min-colors 89)) (:background "#fe2500"))))
 '(default-italic ((t (:slant italic))))
 '(error ((t (:foreground "#00ffff" :weight bold))))
 '(ffap ((((class color) (min-colors 89)) (:foreground "#c2a580"))))
 '(fixed-pitch ((t (:weight light :height 140 :family "JetBrainsMono Nerd Font Mono"))))
 '(font-latex-bold-face ((((class color) (min-colors 89)) (:foreground "#eee884"))))
 '(font-latex-italic-face ((((class color) (min-colors 89)) (:foreground "#d29d00" :italic t))))
 '(font-latex-match-reference-keywords ((((class color) (min-colors 89)) (:foreground "#f32400"))))
 '(font-latex-match-variable-keywords ((((class color) (min-colors 89)) (:foreground "#d29d00"))))
 '(font-latex-string-face ((((class color) (min-colors 89)) (:foreground "#ffc4ab"))))
 '(font-lock-builtin-face ((((class color) (min-colors 89)) (:foreground "#d96c92"))))
 '(font-lock-comment-face ((((class color) (min-colors 89)) (:foreground "#7a7a7a"))))
 '(font-lock-constant-face ((((class color) (min-colors 89)) (:foreground "#f32400"))))
 '(font-lock-doc-face ((((class color) (min-colors 89)) (:foreground "#7a7a7a"))))
 '(font-lock-function-name-face ((((class color) (min-colors 89)) (:foreground "#f5ec00"))))
 '(font-lock-keyword-face ((((class color) (min-colors 89)) (:bold ((class color) (min-colors 89)) :foreground "#9c3e00"))))
 '(font-lock-negation-char-face ((((class color) (min-colors 89)) (:foreground "#f32400"))))
 '(font-lock-reference-face ((((class color) (min-colors 89)) (:foreground "#f32400"))))
 '(font-lock-string-face ((t (:foreground "#ffc4ab"))))
 '(font-lock-type-face ((((class color) (min-colors 89)) (:foreground "#eee884"))))
 '(font-lock-variable-name-face ((t (:foreground "#d29d00"))))
 '(font-lock-warning-face ((((class color) (min-colors 89)) (:foreground "#ff9000" :background "#431814"))))
 '(fringe ((((class color) (min-colors 89)) (:background "#431814" :foreground "#c2a580"))))
 '(gnus-header-content ((((class color) (min-colors 89)) (:foreground "#9c3e00"))))
 '(gnus-header-from ((((class color) (min-colors 89)) (:foreground "#d29d00"))))
 '(gnus-header-name ((((class color) (min-colors 89)) (:foreground "#eee884"))))
 '(gnus-header-subject ((((class color) (min-colors 89)) (:foreground "#f5ec00" :bold t))))
 '(header-line ((t (:background "#542c29" :foreground "#c2a580" :inverse-video nil :box nil :underline (:color foreground-color :style wave :position nil) :weight bold))))
 '(highlight ((((class color) (min-colors 89)) (:foreground "#d6b68d" :background "#542c29"))))
 '(highlight-indent-guides-even-face ((t (:background "#57422b"))))
 '(highlight-indent-guides-odd-face ((t (:background "#3f2d1c"))))
 '(highlight-indent-guides-top-even-face ((t (:background "#766553"))))
 '(highlight-indent-guides-top-odd-face ((t (:background "#635647"))))
 '(hl-line ((t (:background "#542925"))))
 '(icompletep-determined ((((class color) (min-colors 89)) :foreground "#d96c92")))
 '(ido-first-match ((((class color) (min-colors 89)) (:foreground "#9c3e00" :bold t))))
 '(ido-only-match ((((class color) (min-colors 89)) (:foreground "#ff9000"))))
 '(info-quoted-name ((((class color) (min-colors 89)) (:foreground "#d96c92"))))
 '(info-string ((((class color) (min-colors 89)) (:foreground "#ffc4ab"))))
 '(isearch ((((class color) (min-colors 89)) (:bold t :foreground "#aaaaff" :background "#542c29"))))
 '(ivy-current-match ((((class color) (min-colors 89)) (:underline t :inherit highlight :foreground "#d6b68d"))))
 '(jde-java-font-lock-constant-face ((t (:foreground "#f32400"))))
 '(jde-java-font-lock-modifier-face ((t (:foreground "#ebc89b"))))
 '(jde-java-font-lock-number-face ((t (:foreground "#d29d00"))))
 '(jde-java-font-lock-package-face ((t (:foreground "#d29d00"))))
 '(jde-java-font-lock-private-face ((t (:foreground "#9c3e00"))))
 '(jde-java-font-lock-public-face ((t (:foreground "#9c3e00"))))
 '(jde-jave-font-lock-protected-face ((t (:foreground "#9c3e00"))))
 '(js2-external-variable ((((class color) (min-colors 89)) (:foreground "#eee884"))))
 '(js2-function-param ((((class color) (min-colors 89)) (:foreground "#f32400"))))
 '(js2-jsdoc-html-tag-delimiter ((((class color) (min-colors 89)) (:foreground "#ffc4ab"))))
 '(js2-jsdoc-html-tag-name ((((class color) (min-colors 89)) (:foreground "#d29d00"))))
 '(js2-jsdoc-value ((((class color) (min-colors 89)) (:foreground "#ffc4ab"))))
 '(js2-private-function-call ((((class color) (min-colors 89)) (:foreground "#f32400"))))
 '(js2-private-member ((((class color) (min-colors 89)) (:foreground "#d6b68d"))))
 '(js3-error-face ((((class color) (min-colors 89)) (:underline "#ff9000"))))
 '(js3-external-variable-face ((((class color) (min-colors 89)) (:foreground "#d29d00"))))
 '(js3-function-param-face ((((class color) (min-colors 89)) (:foreground "#ebc89b"))))
 '(js3-instance-member-face ((((class color) (min-colors 89)) (:foreground "#f32400"))))
 '(js3-jsdoc-tag-face ((((class color) (min-colors 89)) (:foreground "#9c3e00"))))
 '(js3-warning-face ((((class color) (min-colors 89)) (:underline "#9c3e00"))))
 '(jupyter-repl-input-prompt ((t (:foreground "white"))))
 '(jupyter-repl-output-prompt ((t (:foreground "#7f7f7f")))) ; same as brightblack
 '(jupyter-repl-traceback ((t (:background "#431814"))))
 '(lazy-highlight ((((class color) (min-colors 89)) (:foreground "#ebc89b" :background "#542c29"))))
 '(line-number ((t (:inherit fringe))))
 '(line-number-current-line ((t (:inherit fringe :foreground "white" :weight bold))))
 '(link ((((class color) (min-colors 89)) (:underline t :foreground "#f4bf00"))))
 '(magit-branch ((((class color) (min-colors 89)) (:foreground "#f32400" :weight bold))))
 '(magit-diff-context-highlight ((((class color) (min-colors 89)) (:background "#542c29" :foreground "#d6b68d"))))
 '(magit-diff-file-header ((((class color) (min-colors 89)) (:foreground "#ebc89b" :background "#542c29"))))
 '(magit-diffstat-added ((((class color) (min-colors 89)) (:foreground "#eee884"))))
 '(magit-diffstat-removed ((((class color) (min-colors 89)) (:foreground "#d29d00"))))
 '(magit-hash ((((class color) (min-colors 89)) (:foreground "#ebc89b"))))
 '(magit-hunk-heading ((t (:background "#542c29"))))
 '(magit-hunk-heading-highlight ((((class color) (min-colors 89)) (:background "#542c29"))))
 '(magit-item-highlight ((t nil)))
 '(magit-log-author ((t (:foreground "#d96c92"))))
 '(magit-process-ng ((((class color) (min-colors 89)) (:foreground "#ff9000" :weight bold))))
 '(magit-process-ok ((((class color) (min-colors 89)) (:foreground "#f5ec00" :weight bold))))
 '(magit-section-heading ((t (:foreground "#9c3e00" :weight bold))))
 '(magit-section-highlight ((t (:background "#4A2F24"))))
 ;; marginalia-key theme inspired by helm-M-x-key:
 ;; https://github.com/emacs-helm/helm/blob/eae4f5a24a2a5d9fac0ec1a9200362bf9efa911b/helm-command.el#L69
 '(marginalia-key ((t (:inherit font-lock-warning-face :weight thin :slant italic))))
 '(menu ((t (:background "#583400"))))
 '(minibuffer-prompt ((((class color) (min-colors 89)) (:bold t :foreground "#9c3e00"))))
 '(mode-line ((t (:background "#785029" :foreground "#e0c98c" :box nil :weight bold))))
 '(mode-line-buffer-id ((((class color) (min-colors 89)) (:bold t :foreground "#fffbca"))))
 '(mode-line-emphasis ((((class color) (min-colors 89)) (:foreground "#f5ec00"))))
 '(mode-line-highlight ((((class color) (min-colors 89)) (:background "#9c3e00" :box nil :weight bold))))
 '(mode-line-inactive ((((class color) (min-colors 89)) (:box (:line-width 1 :style flat-button) :foreground "#d29d00" :background "#2b0400" :weight normal))))
 '(mu4e-cited-1-face ((((class color) (min-colors 89)) (:foreground "#ebc89b"))))
 '(mu4e-cited-7-face ((((class color) (min-colors 89)) (:foreground "#d6b68d"))))
 '(mu4e-header-marks-face ((((class color) (min-colors 89)) (:foreground "#eee884"))))
 '(mu4e-view-url-number-face ((((class color) (min-colors 89)) (:foreground "#eee884"))))
 '(org-block ((t (:inherit (shadow fixed-pitch) :extend t :background "#533A2A" :foreground "#fffbca"))))
 '(org-block-begin-line ((t (:background "#402513" :foreground "#998050" :extend t :inherit org-meta-line))))
 '(org-block-end-line ((t (:background "#402513" :foreground "#998050" :extend t :inherit org-block-begin-line))))
 '(org-checkbox ((t (:inherit (bold fixed-pitch)))))
 '(org-code ((t (:inherit (shadow fixed-pitch)))))
 '(org-document-title ((t (:foreground "#9DDD00" :weight bold :height 2.074))))
 '(org-formula ((t (:foreground "chocolate1" :inherit fixed-pitch))))
 '(org-level-1 ((t (:inherit org-level-8 :extend nil :foreground "#f32400" :height 1.728))))
 '(org-level-2 ((t (:height 1.44 :foreground "#9c3e00" :extend nil :inherit org-level-8))))
 '(org-level-3 ((t (:height 1.2 :foreground "#488800" :extend nil :inherit org-level-8))))
 '(org-level-4 ((t (:height 1.1 :inherit org-level-8 :extend nil :foreground "#d29d00"))))
 '(org-level-8 ((t (:extend nil :weight semi-bold :family "Source Sans 3"))))
 '(org-meta-line ((t (:inherit (font-lock-comment-face fixed-pitch)))))
 '(org-sexp-date ((((class color) (min-colors 89)) (:foreground "#c2a580"))))
 '(org-special-keyword ((t (:inherit (font-lock-keyword-face fixed-pitch)))))
 '(org-table ((t (:foreground "#f5ec00" :inherit fixed-pitch))))
 '(org-verbatim ((t (:inherit (shadow fixed-pitch)))))
 '(rainbow-delimiters-depth-1-face ((((class color) (min-colors 89)) :foreground "#fffbca")))
 '(rainbow-delimiters-depth-2-face ((((class color) (min-colors 89)) :foreground "#eee884")))
 '(rainbow-delimiters-depth-3-face ((((class color) (min-colors 89)) :foreground "#d29d00")))
 '(rainbow-delimiters-depth-4-face ((((class color) (min-colors 89)) :foreground "#f32400")))
 '(rainbow-delimiters-depth-5-face ((((class color) (min-colors 89)) :foreground "#9c3e00")))
 '(rainbow-delimiters-depth-6-face ((((class color) (min-colors 89)) :foreground "#fffbca")))
 '(rainbow-delimiters-depth-7-face ((((class color) (min-colors 89)) :foreground "#eee884")))
 '(rainbow-delimiters-depth-8-face ((t nil)))
 '(rainbow-delimiters-unmatched-face ((((class color) (min-colors 89)) :foreground "#ff9000")))
 '(region ((t (:background "#554422"))))
 '(show-paren-match ((t (:background "#f5ec00" :foreground "#330400"))))
 '(show-paren-mismatch ((((class color) (min-colors 89)) (:foreground "#330400" :background "#ff9000"))))
 '(slime-repl-inputed-output-face ((((class color) (min-colors 89)) (:foreground "#eee884"))))
 '(success ((t (:foreground "#7bbb00" :weight bold))))
 ;; tab-line theme inspired by https://andreyor.st/posts/2020-05-10-making-emacs-tabs-look-like-in-atom/
 ;; tab-line related faces originally set inherit to nil
 ;; also let (box-width (/ (max 2 (line-pixel-height)) 2)) for non-neg1 box
 '(tab-line ((((class color) (min-colors 89)) (:background "#431814" :foreground "#c2a580" :height 1.0 :box (:line-width -1 :color "#431814" :style flat-button) :inherit variable-pitch)))) ; box was "#ebc898"
 '(tab-line-highlight ((((class color) (min-colors 89)) (:box (:line-width 1 :style flat-button) :inherit highlight))))
 '(tab-line-tab ((((class color) (min-colors 89)) (:background "#785029" :foreground "#e0c98c" :weight normal :box (:line-width 1 :color "#785029" :style flat-button) :inherit nil))))
 ;; colour taken from mode-line
 '(tab-line-tab-current ((((class color) (min-colors 89)) (:background "#785029" :foreground "#e0c98c" :weight normal :box (:line-width 1 :color "#785029") :inherit nil))))
 '(tab-line-tab-inactive ((((class color) (min-colors 89)) (:background "#431814" :foreground "#c2a580" :weight normal :box (:line-width 1 :color "#431814" :style flat-button) :inherit nil))))
 '(telephone-line-accent-active ((t (:foreground "#331400" :background "#9DDD00" :inherit mode-line))))
 '(telephone-line-accent-inactive ((t (:foreground "#331400" :background "#488800" :inherit mode-line-inactive))))
 '(term ((((class color) (min-colors 89)) (:foreground "#fffbca" :background "#330400"))))
 '(term-color-black ((((class color) (min-colors 89)) (:foreground "#542c29" :background "#542c29"))))
 '(term-color-blue ((((class color) (min-colors 89)) (:foreground "#f5ec00" :background "#f5ec00"))))
 '(term-color-cyan ((((class color) (min-colors 89)) (:foreground "#ffc4ab" :background "#ffc4ab"))))
 '(term-color-green ((((class color) (min-colors 89)) (:foreground "#eee884" :background "#542c29"))))
 '(term-color-magenta ((((class color) (min-colors 89)) (:foreground "#d96c92" :background "#d96c92"))))
 '(term-color-red ((((class color) (min-colors 89)) (:foreground "#9c3e00" :background "#542c29"))))
 '(term-color-white ((((class color) (min-colors 89)) (:foreground "#ebc89b" :background "#ebc89b"))))
 '(term-color-yellow ((((class color) (min-colors 89)) (:foreground "#d29d00" :background "#d29d00"))))
 '(trailing-whitespace ((((class color) (min-colors 89)) :background "#ff9000")))
 '(tty-menu-disabled-face ((t (:background "#7A5600" :foreground "lightgray"))))
 '(tty-menu-enabled-face ((t (:background "#7A5600" :foreground "#FFFBCA" :weight bold))))
 '(tty-menu-selected-face ((t (:background "#9C7822"))))
 '(undo-tree-visualizer-current-face ((((class color) (min-colors 89)) :foreground "#d96c92")))
 '(undo-tree-visualizer-default-face ((((class color) (min-colors 89)) :foreground "#ebc89b")))
 '(undo-tree-visualizer-register-face ((((class color) (min-colors 89)) :foreground "#eee884")))
 '(undo-tree-visualizer-unmodified-face ((((class color) (min-colors 89)) :foreground "#d29d00")))
 '(variable-pitch ((t (:weight light :family "Source Sans 3"))))
 '(vertical-border ((t (:foreground "#77664f"))))
 '(warning ((((class color) (min-colors 89)) (:foreground "#55aaff"))))
 '(web-mode-builtin-face ((((class color) (min-colors 89)) (:inherit font-lock-builtin-face))))
 '(web-mode-comment-face ((((class color) (min-colors 89)) (:inherit font-lock-comment-face))))
 '(web-mode-constant-face ((((class color) (min-colors 89)) (:inherit font-lock-constant-face))))
 '(web-mode-doctype-face ((((class color) (min-colors 89)) (:inherit font-lock-comment-face))))
 '(web-mode-function-name-face ((((class color) (min-colors 89)) (:inherit font-lock-function-name-face))))
 '(web-mode-html-attr-name-face ((((class color) (min-colors 89)) (:foreground "#f5ec00"))))
 '(web-mode-html-attr-value-face ((((class color) (min-colors 89)) (:foreground "#9c3e00"))))
 '(web-mode-html-tag-face ((((class color) (min-colors 89)) (:foreground "#d96c92"))))
 '(web-mode-keyword-face ((((class color) (min-colors 89)) (:foreground "#9c3e00"))))
 '(web-mode-string-face ((((class color) (min-colors 89)) (:foreground "#ffc4ab"))))
 '(web-mode-type-face ((((class color) (min-colors 89)) (:inherit font-lock-type-face))))
 '(web-mode-warning-face ((((class color) (min-colors 89)) (:inherit font-lock-warning-face))))
 '(yas-field-highlight-face ((t (:background "#64403d")))))

;;;###autoload
(when (and (boundp 'custom-theme-load-path) load-file-name)
  (add-to-list 'custom-theme-load-path
               (file-name-as-directory (file-name-directory load-file-name))))

(provide-theme 'wood-dark)
